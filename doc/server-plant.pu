participant caller as "LDP server"
participant ecosystem as "simple apps"
participant ST as "shape-tree"
participant cache as "cachingFetch"
participant fs as "storage"
title
        <u>plant</u> server implementation
        plant <color #066>**%ShapeTree root%**</color> with <color #606>%slug%</color> into <color #00b>**%parent URL%**</color>
end title

caller -> fs: rstat(<color #00b>**%parent URL%**</color>)
caller -> ST: <color #00b>parentContainer</color> = loadContainer(<color #00b>**%parent URL%**</color>)
ST -> fs: readContainer(<color #00b>**%parent URL%**</color>)

caller -> ecosystem: reuseShapeTree(Container(<color #00b>parentContainer</color>, <color #066>**%ShapeTree root%**</color>)
caller -> ST: <color #00b>parentContainer</color>.plantShapeTreeInstance(<color #066>**%ShapeTree root%**</color>, <color #606>%slug%</color>)
activate ST

        group fetch remote ShapeTree
  		ST -> ST #eef: <color #066>shapeTreeRoot</color> = new RemoteShapeTree(<color #066>**%ShapeTree root%**</color>)
                activate ST
  		        ST -> cache: fetch(<color #066>**%ShapeTree root%**</color>)
  			cache -> fs: rstat(hash(<color #066>**%ShapeTree root%**</color>))
  			cache ->]: fetch(<color #066>**%ShapeTree root%**</color>)
  			cache -> fs: write(hash(<color #066>**%ShapeTree root%**</color>), ...)
                deactivate ST
        end

        group invent root Container
  		ST -> ST: this(<color #00b>**%parent URL%**</color>).nestContainer(<%slug%>, "Application Container")
                ST -> ST: <color #00b>parentContainer</color>.nestContainer("<color #606>%slug%</color>")
                activate ST
                        ST -> fs: inventContainer(<color #00b>**%parent URL%**</color>, "<color #606>%slug%</color>")
                        note right of ST #fff: <color #0b0>instanceContainer</color> = new Container(<color #00b>**%parent URL%**</color> /<color #606>%slug%</color>/>)
                        ST -> fs:writeContainer(<color #0b0>instanceContainer</color>)
                deactivate ST
                ST -> ST #eef: <color #0b0>instanceContainer</color>.asManagedContainer(<color #066>**%ShapeTree root%**</color>, '.')
                ST -> ST:ManagedContainer(<<color #00b>**%parent URL%**</color>/<color #606>%slug%</color>/>):new
                ST -> ST: setTitle(...)
                ST -> fs: writeContainer(<color #0b0>instanceContainer</color>)
        end

        group instantiate nested Containers
                ST -> ST: shapeTree(<color #066>**%ShapeTree root%**</color>).instantiateStatic(\n\
                %focus node%, <<color #00b>**%parent URL%**</color>/<color #606>%slug%</color>/>, '.', \n\
                <color #00b>parentContainer</color>, Container(<color #00b>**%parent URL%**</color>/<color #606>%slug%</color>/))
                activate ST
                        group for each %staticSubDir%
                                activate ST
                                        ST -> ST: <color #066>shapeTreeRoot</color>:instantiateStatic(... %staticSubDir% ...)
                                        activate ST
                                                ST -> ST: тоб RemoteShapeTree(<color #066>**%ShapeTree root%**</color>) new
                                                ST --> fs: ensureContainer(<<color #00b>**%parent URL%**</color>/<color #606>%slug%</color>/%staticSubDir%/>)
                                                ST --> fs: writeContainer(<<color #00b>**%parent URL%**</color>/<color #606>%slug%</color>/%staticSubDir%/>
                                        deactivate ST
                                deactivate ST
                        end
                deactivate ST
        end

deactivate ST

activate ST
'        group index ShapeTree instance
                caller -> ecosystem: indexInstalledShapeTree(\n\
        <color #00b>parentContainer</color>, \n\
        <color #0b0>instanceContainer</color>, \n\
        <color #066>**%ShapeTree root%**</color>)
                ecosystem -> fs: write() and writeContainer()...
'        end
deactivate ST

caller -> ST: postedContainer.addMember(<<color #00b>**%parent URL%**</color>/<color #606>%slug%</color>/>)
ST -> fs: postedContainer(<color #00b>**%parent URL%**</color>/).writeContainer()
